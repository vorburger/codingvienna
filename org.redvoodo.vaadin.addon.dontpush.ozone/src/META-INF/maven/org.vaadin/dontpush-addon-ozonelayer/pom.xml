<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<version>0.4.0</version>
	<groupId>org.vaadin</groupId>
	<artifactId>dontpush-addon-ozonelayer</artifactId>
	<packaging>jar</packaging>
	<name>dontpush ozone layer</name>
	<description>dontpush add-on based on atmosphere library</description>

	<properties>
		<atmosphere.version>0.8.6</atmosphere.version>
	</properties>

	<repositories>
		<repository>
			<id>glassfish-maven-repository.dev.java.net</id>
			<name>GlassFish Maven Repository</name>
			<url>http://download.java.net/maven/glassfish</url>
		</repository>
		<repository>
			<id>oss.sonatype.org-snapshot</id>
			<url>http://oss.sonatype.org/content/repositories/snapshots</url>
		</repository>

	</repositories>

	<dependencies>
		<dependency>
			<groupId>com.vaadin</groupId>
			<artifactId>vaadin</artifactId>
			<version>6.7.4</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<type>jar</type>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<version>2.3.0</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.6.1</version>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-gwt-client</artifactId>
			<version>${atmosphere.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-gwt-common</artifactId>
			<version>${atmosphere.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-gwt-server</artifactId>
			<version>${atmosphere.version}</version>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-gwt-poll</artifactId>
			<version>${atmosphere.version}</version>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.5</source>
					<target>1.5</target>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<configuration>
					<encoding>UTF-8</encoding>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifestEntries>
							<Vaadin-Package-Version>1</Vaadin-Package-Version>
							<Implementation-Vendor>${project.organization.name}
							</Implementation-Vendor>
							<!-- Overridden to make this work with the directory <Implementation-Title>${project.name}</Implementation-Title> -->
							<Implementation-Title>DontPush OzoneLayer</Implementation-Title>
							<Implementation-Version>${pom.version}</Implementation-Version>
							<Vaadin-Widgetsets>org.vaadin.dontpush.widgetset.DontPushOzoneWidgetset
							</Vaadin-Widgetsets>
						</manifestEntries>
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<configuration>
					<links>
						<link>http://vaadin.com/api/</link>
						<link>http://java.sun.com/j2se/1.5.0/docs/api/</link>
						<link>http://java.sun.com/javaee/5/docs/api/</link>
					</links>
					<encoding>UTF-8</encoding>
					<source>1.5</source>
				</configuration>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.1.2</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-dependencies</id>
						<phase>package</phase>
						<goals>
							<goal>copy-dependencies</goal>
						</goals>
						<configuration>
						<outputDirectory>target/libs</outputDirectory>
							<!-- configure the plugin here -->
						</configuration>
					</execution>
				</executions>
			</plugin>

			<!-- This creates a zip file of jar and sources jar. Makes sources available 
				to maven users automatically?! We could also use this to package required 
				dependecies for those poor developer souls that still dont know how to use 
				a build system that supports transient dependencies... -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<finalName>dontpush-addon-ozonelayer-${project.version}</finalName>
					<appendAssemblyId>false</appendAssemblyId>
					<descriptors>
						<descriptor>assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>

	<pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>2.4</version>
			</plugin>
		</plugins>
	</pluginManagement>

		<!-- This is needed for the sources required by the GWT compiler to be 
			included in the produced JARs -->
		<resources>
			<resource>
				<directory>src/main/java</directory>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
			</resource>
		</resources>

	</build>

</project>
